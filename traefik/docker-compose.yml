version: '3'

services:
  traefik:
    image: traefik:v2.8
    container_name: traefik
    restart: unless-stopped
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--metrics.prometheus=true"
      - "--api.insecure=true"
      - "--providers.docker"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certResolver=dnsmadeeasy"
      - "--entrypoints.websecure.http.tls.domains[0].main=${APPDOMAIN:-local}"
      - "--entrypoints.websecure.http.tls.domains[0].sans=*.${APPDOMAIN:-local}"
      - "--certificatesresolvers.dnsmadeeasy.acme.dnschallenge=true"
      - "--certificatesresolvers.dnsmadeeasy.acme.dnschallenge.provider=dnsmadeeasy"
      - "--certificatesresolvers.dnsmadeeasy.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.dnsmadeeasy.acme.storage=/letsencrypt/acme.json"
    privileged: true
    labels:
      - "traefik.http.routers.traefik.rule=Host(`traefik.${APPDOMAIN:-local}`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    environment:
      - "DNSMADEEASY_API_KEY=${DNSMADEEASY_API_KEY}"
      - "DNSMADEEASY_API_SECRET=${DNSMADEEASY_API_SECRET}"
    ports:
      # HTTP port
      - "80:80"
      # HTTPS port
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      - traefik-storage:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik-network

volumes:
  traefik-storage:
  
networks:
    traefik-network:
      external: true
